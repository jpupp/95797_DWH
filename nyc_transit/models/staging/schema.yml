models:
  - name: stg__bike_data
    description: "Staging table with bike data"
    columns:
      - name: started_at_ts
        description: "Date and time when the trip started"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: timestamp

      - name: ended_at_ts
        description: "Date and time when the trip ended"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: timestamp

      - name: tripduration
        description: "Duration of the Trip in seconds"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: 0
                max_value: 3600000
                config:
                  severity: warn

      - name: start_station_id
        description: "Identifier for Start Station"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: start_station_name
        description: "Name of Start Station"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: start_lat
        description: "Latitude of Start Location"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: -90.0
                max_value: 90.0

      - name: start_lng
        description: "Longitude of Start Location"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: -180.0
                max_value: 180.0

      - name: end_station_id
        description: "Identifier for End Station"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: end_station_name
        description: "Name of End Station"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: end_lat
        description: "Latitude of End Location"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: -90.0
                max_value: 90.0

      - name: end_lng
        description: "Longitude of End Location"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: -180.0
                max_value: 180.0

      - name: filename
        description: "source file name"
        tests:
            - not_null
            - dbt_expectations.expect_column_to_exist

  - name: stg__central_park_weather
    description: "Staging table with Central Park weather data"
    columns:
      - name: date
        description: "Date of the Weather Data"
        tests:
            - not_null
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: date

      - name: awnd
        description: "Average Wind Speed"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: prcp
        description: "Amount of precipitation"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: snow
        description: "amount of snowfall"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: snwd
        description: "Snow depth"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tmax
        description: "Maximum Temperature"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: INTEGER

      - name: tmin
        description: "Minimum temperature"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: INTEGER

      - name: filename
        description: "Source file name"
        tests:
            - not_null
            - dbt_expectations.expect_column_to_exist

  - name: stg__fhv_bases
    description: "Staging table with FHV bases"
    columns:
      - name: base_number
        description: "The TLC license number of the dispatching base"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - unique

      - name: base_name
        description: "The official name of the base entity"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null

      - name: dba
        description: "The “doing business as” name of the base"
        tests:
            - dbt_expectations.expect_column_to_exist
            
      - name: dba_category
        description: "Category of dba listed above"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: filename
        description: "Name of the file of source data"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null

  - name: stg__fhv_tripdata
    description: "Staging table with FHV trip data"
    columns:
      - name: dispatching_base_num
        description: "The TLC license number of the dispatching base"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            #there are 78 distinct base numbers that are in fhv_tripdata but not in fhv_bases table
            - relationships:
                 to: source('main','fhv_bases')
                 field: base_number
                 config:
                  severity: warn

      - name: pickup_datetime
        description: "Date and time of trip's pick-up"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: dropoff_datetime
        description: "Date and time of trip's drop-off"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: pulocationid
        description: "PU (Pickup) Location ID of trip start"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: dolocationid
        description: "DO (Dropoff) Location ID of trip end"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: affiliated_base_number
        description: "Affiliated base number"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: filename
        description: "Name of the file of source data"
        tests:
              - dbt_expectations.expect_column_to_exist

  - name: stg__fhvhv_tripdata
    description: "Staging table with high volume For Hire vehicle HVFHV trip data"
    columns:
      - name: hvfhs_license_num
        description: "The TLC license number of the HVFHS base or business As of September 2019, the HVFHS licensees are the following: HV0002: Juno HV0003: Uber HV0004: Via HV0005: Lyft"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null

      - name: dispatching_base_num
        description: "The TLC Base License Number of the base that dispatched the trip"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: originating_base_num
        description: "base number of the base that received the original trip request"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: request_datetime
        description: "date/time when passenger requested to be picked up"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: on_scene_datetime
        description: "date/time when driver arrived at the pick-up location (Accessible Vehicles-only)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: pickup_datetime
        description: "The date and time of the trip pick-up"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: dropoff_datetime
        description: "The date and time of the trip drop-off"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: pulocationid
        description: "TLC Taxi Zone in which the trip began"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: dolocationid
        description: "TLC Taxi Zone in which the trip ended"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: trip_miles
        description: "total miles for passenger trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 1000
                  config:
                    severity: warn

      - name: trip_time
        description: "total time in seconds for passenger trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT
            - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0
                  max_value: 3600000
                  config:
                    severity: warn

      - name: base_passenger_fare
        description: "base passenger fare before tolls, tips, taxes, and fees"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tolls
        description: "total amount of all tolls paid in trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: bcf
        description: "total amount collected in trip for Black Car Fund"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: sales_tax
        description: "total amount collected in trip for NYS sales tax"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: congestion_surcharge
        description: "total amount collected in trip for NYS congestion surcharge"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: airport_fee
        description: "$2.50 for both drop off and pick up at LaGuardia, Newark, and JohnF. Kennedy airports" 
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tips
        description: "total amount of tips received from passenger"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: driver_pay
        description: "total driver pay (not including tolls or tips and net of commission,surcharges, or taxes)" 
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: shared_request_flag
        description: "Did the passenger agree to a shared/pooled ride, regardless of whether they were matched? (Y/N)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: shared_match_flag
        description: "Did the passenger share the vehicle with another passenger who booked separately at any point during the trip? (Y/N)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: access_a_ride_flag
        data_type: boolean
        description: "Was the trip administered on behalf of the Metropolitan Transportation Authority (MTA)? (Y/N)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: wav_request_flag
        description: "Did the passenger request a wheelchair-accessible vehicle (WAV)? (Y/N)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: wav_match_flag
        description: "Did the trip occur in a wheelchair-accessible vehicle (WAV)? (Y/N)"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: filename
        description: "Name of the file of source data"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null   

  - name: stg__green_tripdata
    description: "Staging table with green trip data"
    columns:
      - name: vendorid
        description: "A code indicating the LPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: lpep_pickup_datetime
        description: "The date and time when the meter was engaged. "
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: lpep_dropoff_datetime
        description: "The date and time when the meter was engaged. "
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka 'store and forward,' because the vehicle did not have a connection to the server. Y= store and forward trip, N= not a store and forward trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip. 1= Standard rate, 2=JFK, 3=Newark, 4=Nassau or Westchester, 5=Negotiated fare, 6=Group ride"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: passenger_count
        description: "The number of passengers in the vehicle. This is a driver-entered value."
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: trip_distance
        description: "The elapsed trip distance in miles reported by the taximeter."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: 0
                max_value: 1000
                config:
                  severity: warn

      - name: fare_amount
        description: "The time-and-distance fare calculated by the meter."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: extra
        description: "Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: mta_tax
        description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tip_amount
        description: "Tip amount: This field is automatically populated for credit card tips. Cash tips are not included."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tolls_amount
        description: "Total amount of all tolls paid in trip."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed on hailed trips at the flag drop. The improvement surcharge began being levied in 2015."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: total_amount
        description: "The total amount charged to passengers. Does not include cash tips."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip. 1= Credit card, 2= Cash, 3= No charge, 4= Dispute, 5= Unknown, 6= Voided trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: trip_type
        description: "A code indicating whether the trip was a street-hail or a dispatch that is automatically assigned based on the metered rate in use but can be altered by the driver. 1= Street-hail, 2= Dispatch"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: congestion_surcharge
        description: "Congestion surcharge"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: filename
        description: "Name of the file of source data"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null

  - name: stg__yellow_tripdata
    description: ""
    columns:
      - name: vendorid
        description: "A code indicating the TPEP provider that provided the record. 1= Creative Mobile Technologies, LLC; 2= VeriFone Inc."
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: tpep_pickup_datetime
        description: "The date and time when the meter was engaged."
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: tpep_dropoff_datetime
        description: "The date and time when the meter was disengaged."
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: TIMESTAMP

      - name: passenger_count
        description: "The number of passengers in the vehicle. This is a driver-entered value."
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: trip_distance
        description: "The elapsed trip distance in miles reported by the taximeter."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE
            - dbt_expectations.expect_column_values_to_be_between:
                min_value: 0
                max_value: 1000
                config:
                  severity: warn

      - name: ratecodeid
        description: "The final rate code in effect at the end of the trip. 1= Standard rate, 2=JFK, 3=Newark, 4=Nassau or Westchester, 5=Negotiated fare, 6=Group ride"
        tests:
            - dbt_expectations.expect_column_to_exist

      - name: store_and_fwd_flag
        description: "This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka 'store and forward,' because the vehicle did not have a connection to the server. Y= store and forward trip, N= not a store and forward trip"
        tests:
            - dbt_expectations.expect_column_to_exist            
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BOOLEAN

      - name: pulocationid
        description: "TLC Taxi Zone in which the taximeter was engaged"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: dolocationid
        description: "TLC Taxi Zone in which the taximeter was disengaged"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: payment_type
        description: "A numeric code signifying how the passenger paid for the trip. 1= Credit card, 2= Cash, 3= No charge, 4= Dispute, 5= Unknown, 6= Voided trip"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: BIGINT

      - name: fare_amount
        description: "The time-and-distance fare calculated by the meter."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: extra
        description: "Miscellaneous extras and surcharges. Currently, this only includes the $0.50 and $1 rush hour and overnight charges."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: mta_tax
        description: "$0.50 MTA tax that is automatically triggered based on the metered rate in use."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tip_amount
        description: "Tip amount: This field is automatically populated for credit card tips. Cash tips are not included."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: tolls_amount
        description: "Total amount of all tolls paid in trip."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: improvement_surcharge
        description: "$0.30 improvement surcharge assessed on hailed trips at the flag drop. The improvement surcharge began being levied in 2015."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: total_amount
        description: "The total amount charged to passengers. Does not include cash tips."
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: congestion_surcharge
        description: "Congestion surcharge"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: airport_fee
        description: "$1.25 for pick up only at LaGuardia and John F. Kennedy Airports"
        tests:
            - dbt_expectations.expect_column_to_exist
            - dbt_expectations.expect_column_values_to_be_of_type:
                column_type: DOUBLE

      - name: filename
        description: "Name of the file of source data"
        tests:
            - dbt_expectations.expect_column_to_exist
            - not_null